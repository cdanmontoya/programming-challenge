[tool.poetry]
name = "python-template"
version = "0.2.0"
description = "A python basic template that encourages some good practices."
authors = ["cdanmontoya <carlos.danmontoya@gmail.com>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.4"
pydantic = "^2.9.2"
injector = "^0.22.0"
python-dotenv = "^1.0.1"
uvicorn = "^0.32.0"
httpx = "^0.27.2"
rapidfuzz = "^3.10.1"


[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
coverage = "^7.5.1"
factory-boy = "^3.3.0"
faker = "^25.2.0"
pytest = "^8.2.1"
mypy = "^1.10.0"
import-linter = "^2.0"
toml = "^0.10.2"
types-factory-boy = "^0.4.1"
bandit = "^1.7.9"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.importlinter]
root_package = "src"

[tool.pytest.ini_options]
pythonpath = [
  ".", "src"
]

[[tool.importlinter.contracts]]
name = "Basic layered architecture"
type = "layers"
layers =[
    "infrastructure",
    "app",
    "domain",
]
containers = "src"
exhaustive = "true"


[[tool.importlinter.contracts]]
name = "Layered architecture"
type = "layers"
layers =[
    "infrastructure.adapters",
    "infrastructure.acl.dto : infrastructure.acl.translators",
    "app.use_cases",
    "app.ports | app.commands | app.queries",
    "domain.services",
    "domain.model",
]
containers = "src"


[[tool.importlinter.contracts]]
name = "Anticorruption layer should not access any logic elements. Caution with model entities' methods."
type = "forbidden"
source_modules = [
    "src.infrastructure.acl",
]
forbidden_modules = [
    "src.infrastructure.adapters",
    "src.app.use_cases",
    "src.app.ports",
    "src.domain.services",
]

[[tool.importlinter.contracts]]
name = "Commands, Queries and Events should not access any logic elements. Caution with model entities' methods."
type = "forbidden"
source_modules = [
    "src.app.commands",
    "src.app.queries",
]
forbidden_modules = [
    "src.infrastructure.adapters",
    "src.app.use_cases",
    "src.app.ports",
    "src.domain.services",
]


[[tool.importlinter.contracts]]
name = "DTOs should not expose domain entities"
type = "independence"
modules =[
    "src.domain",
    "src.infrastructure.acl.dto",
]